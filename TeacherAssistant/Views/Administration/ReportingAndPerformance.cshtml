
@{
    ViewBag.Title = "Reporting And Performance";
    Layout = "~/Views/Shared/_NewAdminLayout.cshtml";
}

<h2>Reporting And Performance</h2>


<div class="form-horizontal">
    <h4>Student Reporting And Performance</h4>

    <div class="form-group">
        @Html.Label("Subject", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SubjectId", ViewBag.SubjectList as List<SelectListItem>, new { htmlAttributes = new { @class = "form-control", @id = "SubjectId" } })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("StudentRole", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("StudentRole", ViewBag.RoleList as List<SelectListItem>, new { htmlAttributes = new { @class = "form-control", @id = "StudentRole" } })
            @Html.ValidationMessage("StudentRole", "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Year Start", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBox("YearStart", "", new { htmlAttributes = new { @class = "form-control", @id = "YearStart", @type = "number" } })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Year End", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBox("YearEnd", "", new { htmlAttributes = new { @class = "form-control", @id = "YearEnd", @type = "number" } })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="select" value="Select" class="btn btn-default" />
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Download Reports in Excel", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.DropDownList("Reports", new List<SelectListItem>(){
                new SelectListItem { Text="Select Report Type", Value="-1"},
                 new SelectListItem { Text = "Average Grade Over Roles", Value = "1" },
                 new SelectListItem { Text = "Median Grade Over Roles", Value = "2" },
                 new SelectListItem { Text = "Student Grades Over All Roles", Value = "3" },
                 new SelectListItem { Text = "Student Grades Over Particular Role", Value = "4" },
                 new SelectListItem { Text = "Average Grades Across All Roles Per Grade", Value = "5" },
                 new SelectListItem { Text = "Median Grades Across All Roles Per Grade", Value = "6" },
                 new SelectListItem { Text = "Average And Medians Across All results", Value = "7" }
                 }
            , new { htmlAttributes = new { @class = "form-control", @id = "Reports" } })
        </div>
        <div class="col-md-2">
            <input type="button" value="Download Report" id="generateReport" />
        </div>
    </div>
    <div class="container-fluid">
        <canvas id="averageMedian"></canvas>
        <canvas id="studentGrades"></canvas>
        <canvas id="submissions"></canvas>
        <canvas id="averages"></canvas>
        <canvas id="averageOverAll"></canvas>
        <canvas id="medianOverAll"></canvas>
    </div>

</div>
<script type="text/javascript">
    var submissions = { YearDue: [], NumberOfStudents: []};
    var medians = { YearDue: [], MedianGrade: [] };
    var averages = { YearDue: [], AverageGrade: [] };
    var studentGrades = { YearDue: [], NumberOfStudents: [] };
    var averageMedianGrades = { YearDue: [], AverageGrade: [], MedianGrade: [] };
    var ignoreRoles = false;

    var baseSubmissionsUrl = "@Url.Content("~/AdhocPatchAndReporting/ReportingGroupSubmission")";
    var baseAveragesUrl = "@Url.Content("~/AdhocPatchAndReporting/AverageGradeBySubjectRoleAndYearForParticualarSubjectBtwnYears")";
    var baseMedianUrl = "@Url.Content("~/AdhocPatchAndReporting/MedianGradeAttainedGradeBySubjectRoleAndYearForParticualarSubjectBtwnYears")";
    var baseAveragesAcrossAllRolesUrl = "@Url.Content("~/AdhocPatchAndReporting/AverageAttainedGradesGroupedByGradeAndSubjectAcrossAllRolesAndyearBtwnYears")";
    var baseMedianAcrossAllRolesUrl = "@Url.Content("~/AdhocPatchAndReporting/MedianGradeAttainedGroupedByGradeAndSubjectAcrossAllRolesAndyearBtwnYears")";
    var studentGradesUrl =  "@Url.Content("~/AdhocPatchAndReporting/NumberOfStudentsGradedInSubjectAndyearBtwnYears")";
    var averageAndMedianUrl =  "@Url.Content("~/AdhocPatchAndReporting/AverageAndMedianGradeAttainedBySubjectAcrossAllRolesAndyearBtwnYears")";
    function GetActualColourScheme(data) {
        let result = [];
        for (var n = 0; n < data.length; n++) {
            let color = n % 4;
            switch (color) {
                case 0:
                    result.push("#3e95cd");
                    break;
                case 1:
                    result.push("#8e5ea2");
                    break;
                case 2:
                    result.push("#3cba9f");
                    break;
                case 3:
                    result.push("#e8c3b9");
                    break;
                case 4:
                    result.push("#c45850");
                    break;
            }
        }
        return result;
    }
    function PrintGraphStudentGrades(studentGrades) {
        if (studentGrades.NumberOfStudents.length > 0) {
            //print submissions
            var percentilesBarChart = new Chart(document.getElementById("studentGrades"), {
                type: 'pie',
                data: {
                    labels: studentGrades.YearDue,
                    datasets: [
                        {
                            label: "Year Of Assignments",
                            backgroundColor: GetActualColourScheme(studentGrades.YearDue),
                            data: studentGrades.NumberOfStudents
                        }
                    ]
                },
                options: {
                    legend: { display: false },
                    title: {
                        display: true,
                        text: 'Number Of Students Achieving Grades, Across all Roles Over The years'
                    }
                }
            });
        }
    }
    function PrintGraphsSubmissions(submissions) {
        if (submissions.NumberOfStudents.length > 0) {
            //print submissions
            var submissionsBarChart = new Chart(document.getElementById("submissions"), {
                type: 'bar',
                data: {
                    labels: submissions.YearDue,
                    datasets: [
                        {
                            label: "Year Of Assignments",
                            backgroundColor: GetActualColourScheme(submissions.YearDue),
                            data: submissions.NumberOfStudents
                        }
                    ]
                },
                options: {
                    legend: { display: false },
                    title: {
                        display: true,
                        text: 'Grades Achieved by Student Number, Over The years'
                    }
                }
            });
        }
    }
    function PrintGraphsAverages(averages) {
        if (averages.AverageGrade.length > 0) {
            //print averages
            var averageGradeBarChart = new Chart(document.getElementById("averages"), {
                type: 'bar',
                data: {
                    labels: averages.YearDue,
                    datasets: [
                        {
                            label: "Year Of Assignments",
                            backgroundColor: GetActualColourScheme(averages.YearDue),
                            data: averages.AverageGrade
                        }
                    ]
                },
                options: {
                    legend: { display: false },
                    title: {
                        display: true,
                        text: 'Average Grades Over The years'
                    }
                }
            });
        }
    }
    function PrintGraphsMedians(medians) {
        if (medians.MedianGrade.length > 0) {
            //print medians
            var medianGradeBarChart = new Chart(document.getElementById("medians"), {
            type: 'bar',
                data: {
                    labels: medians.YearDue,
                    datasets: [
                        {
                            label: "Year Of Assignments",
                            backgroundColor: GetActualColourScheme(medians.YearDue),
                            data: medians.MedianGrade
                        }
                    ]
            },
            options: {
                legend: { display: false },
                title: {
                    display: true,
                        text: 'Median Grades Over The years'
                }
            }
        });
        }
    }
    function PrintGraphAverageMedianGrades(averageMedianGrades) {
        if (averageMedianGrades.MedianGrade.length > 0) {
            //print medians
            var medianAverageGradeBarChart1 = new Chart(document.getElementById("medianOverAll"), {
                type: 'bar',
                data: {
                    labels: medians.YearDue,
                    datasets: [
                        {
                            label: "Year Of Assignments",
                            backgroundColor: GetActualColourScheme(medians.YearDue),
                            data: medians.MedianGrade
                        }
                    ]
                },
                options: {
                    legend: { display: false },
                    title: {
                        display: true,
                        text: 'Median Grades Over The years'
                    }
                }
            });
        } if (averageMedianGrades.AverageGrade.length > 0) {
            //print medians
            var medianAverageGradeBarChart2 = new Chart(document.getElementById("averageOverAll"), {
                type: 'bar',
                data: {
                    labels: medians.YearDue,
                    datasets: [
                        {
                            label: "Year Of Assignments",
                            backgroundColor: GetActualColourScheme(medians.YearDue),
                            data: medians.AverageGrade
                        }
                    ]
                },
                options: {
                    legend: { display: false },
                    title: {
                        display: true,
                        text: 'Average Grades Over The years'
                    }
                }
            });
        }
    }

    function ComputeUrlPortions() {
        var subject = $('#SubjectId').val();
        var yearStart = $('#YearStart').val();
        var yearEnd = $('#YearEnd').val();
        var studentRole = $('#StudentRole').val();
        //Compute BaseSubmissionsUrls:
        if (studentRole) ignoreRoles = false;
        else ignoreRoles = true;
        

        if (subject > 0) {
            baseSubmissionsUrl += "subjectId=" + subject;
            baseAveragesUrl += "subjectId=" + subject;
            baseMedianUrl += "subjectId=" + subject;
            studentGradesUrl += "subjectId=" + subject;
            baseAveragesAcrossAllRolesUrl += "subjectId=" + subject;
            baseMedianAcrossAllRolesUrl += "subjectId=" + subject;
            averageAndMedianUrl += "subjectId=" + subject;

            baseSubmissionsUrl += "&studentRole=" + studentRole;
            baseAveragesUrl += "&studentRole=" + studentRole;
            baseMedianUrl += "&studentRole=" + studentRole;
            averageAndMedianUrl += "&studentRole=" + studentRole;

            if (yearStart) {

                baseAveragesAcrossAllRolesUrl += "&yearStart=" + yearStart;
                baseMedianAcrossAllRolesUrl += "&yearStart=" + yearStart;
                baseSubmissionsUrl += "&yearStart=" + yearStart;
                baseAveragesUrl += "&yearStart=" + yearStart;
                baseMedianUrl += "&yearStart=" + yearStart;
                studentGradesUrl += "&yearStart=" + yearStart;
                averageAndMedianUrl += "&yearStart=" + yearStart;
                if (yearEnd) {

                    baseAveragesAcrossAllRolesUrl += "&yearEnd=" + yearEnd;
                    baseMedianAcrossAllRolesUrl += "&yearEnd=" + yearEnd;
                    baseSubmissionsUrl += "&yearEnd=" + yearEnd;
                    baseAveragesUrl += "&yearEnd=" + yearEnd;
                    baseMedianUrl += "&yearEnd=" + yearEnd;
                    studentGradesUrl += "&yearEnd=" + yearEnd;
                    averageAndMedianUrl += "&yearEnd=" + yearEnd;
                }
                else {
                    baseAveragesAcrossAllRolesUrl += "&yearEnd=" + yearStart;
                    baseMedianAcrossAllRolesUrl += "&yearEnd=" + yearStart;
                    baseSubmissionsUrl += "&yearEnd=" + yearStart;
                    baseAveragesUrl += "&yearEnd=" + yearStart;
                    baseMedianUrl += "&yearEnd=" + yearStart;
                    studentGradesUrl += "&yearEnd=" + yearStart;
                    averageAndMedianUrl += "&yearEnd=" + yearStart;
                }
            }
            else {

                var yearStart = '@DateTime.Now.Year';
                var yearEnd = '@DateTime.Now.Year';
                baseSubmissionsUrl += "&yearStart=" + yearStart;
                baseAveragesUrl += "&yearStart=" + yearStart;
                baseAveragesAcrossAllRolesUrl += "&yearStart=" + yearStart;
                baseMedianAcrossAllRolesUrl += "&yearStart=" + yearStart;
                baseMedianUrl += "&yearStart=" + yearStart;
                studentGradesUrl += "&yearStart=" + yearStart;
                averageAndMedianUrl += "&yearStart=" + yearStart;

                baseAveragesAcrossAllRolesUrl += "&yearEnd=" + yearEnd;
                baseMedianAcrossAllRolesUrl += "&yearEnd=" + yearEnd;
                baseSubmissionsUrl += "&yearEnd=" + yearEnd;
                baseAveragesUrl += "&yearEnd=" + yearEnd;
                baseMedianUrl += "&yearEnd=" + yearEnd;
                studentGradesUrl += "&yearEnd=" + yearEnd;
                averageAndMedianUrl += "&yearEnd=" + yearEnd;
            }
        }
        else {
             baseSubmissionsUrl = "@Url.Content("~/AdhocPatchAndReporting/ReportingGroupSubmission")";
             baseAveragesUrl = "@Url.Content("~/AdhocPatchAndReporting/AverageGradeBySubjectRoleAndYearForParticualarSubjectBtwnYears")";
             baseAveragesAcrossAllRolesUrl = "@Url.Content("~/AdhocPatchAndReporting/AverageAttainedGradesGroupedByGradeAndSubjectAcrossAllRolesAndyearBtwnYears")";
             baseMedianAcrossAllRolesUrl = "@Url.Content("~/AdhocPatchAndReporting/MedianGradeAttainedGroupedByGradeAndSubjectAcrossAllRolesAndyearBtwnYears")";
             baseMedianUrl = "@Url.Content("~/AdhocPatchAndReporting/MedianGradeAttainedGradeBySubjectRoleAndYearForParticualarSubjectBtwnYears")";
             studentGradesUrl =  "@Url.Content("~/AdhocPatchAndReporting/NumberOfStudentsGradedInSubjectAndyearBtwnYears")";
            averageAndMedianUrl =  "@Url.Content("~/AdhocPatchAndReporting/AverageAndMedianGradeAttainedBySubjectAcrossAllRolesAndyearBtwnYears")";
        }
    }
    function CallCharting() {
        submissions = { YearDue: [], NumberOfStudents: [] };
        medians = { YearDue: [], MedianGrade: [] };
        averages = { YearDue: [], AverageGrade: [] };
        studentGrades = { YearDue: [], NumberOfStudents: [] };
        averageMedianGrades = { YearDue: [], AverageGrade: [], MedianGrade: [] };

        baseSubmissionsUrl = "@Url.Content("~/AdhocPatchAndReporting/GroupByNumberOfStudentsReceivedGradesInSubjectAndyearBtwn?")";
        baseAveragesUrl = "@Url.Content("~/AdhocPatchAndReporting/AverageGradeBySubjectRoleAndYearForParticualarSubjectBtwnYears?")";
        baseMedianUrl = "@Url.Content("~/AdhocPatchAndReporting/MedianGradeAttainedGradeBySubjectRoleAndYearForParticualarSubjectBtwnYears?")";
        studentGradesUrl = "@Url.Content("~/AdhocPatchAndReporting/NumberOfStudentsGradedInSubjectAndyearBtwnYears?")";
        baseAveragesAcrossAllRolesUrl = "@Url.Content("~/AdhocPatchAndReporting/AverageAttainedGradesGroupedByGradeAndSubjectAcrossAllRolesAndyearBtwnYears?")";
        baseMedianAcrossAllRolesUrl = "@Url.Content("~/AdhocPatchAndReporting/MedianGradeAttainedGroupedByGradeAndSubjectAcrossAllRolesAndyearBtwnYears?")";
        averageAndMedianUrl =  "@Url.Content("~/AdhocPatchAndReporting/AverageAndMedianGradeAttainedBySubjectAcrossAllRolesAndyearBtwnYears?")";

        ComputeUrlPortions();
        $.ajax({
            url: studentGradesUrl,
            method: "GET",
            success: function (data) {
                for (let i = 0; i < data.length; i++) {
                    studentGrades.NumberOfStudents.push(data[i].NumberOfStudents);
                    studentGrades.YearDue.push(data[i].YearDue + ", " + data[i].Grade);
                }

                PrintGraphStudentGrades(studentGrades);
            },
            error: function (xHttpReq, error, msg) {

            }
        });
        $.ajax({
            url: averageAndMedianUrl,
            method: "GET",
            success: function (data) {
                for (let i = 0; i < data.length; i++) {
                    
                    averageMedianGrades.AverageGrade.push(data[i].AverageGrade);
                    averageMedianGrades.MedianGrade.push(data[i].MedianGrade);
                    averageMedianGrades.YearDue.push(data[i].YearDue + ", " + data[i].Grade);
                }

                PrintGraphAverageMedianGrades(averageMedianGrades);
            },
            error: function (xHttpReq, error, msg) {

            }
        });
        $.ajax({
            url: baseSubmissionsUrl,
            method: "GET",
            success: function (data) {
                for (let i = 0; i < data.length; i++) {
                    submissions.NumberOfStudents.push(data[i].NumberOfStudents);
                    submissions.YearDue.push(data[i].YearDue +", "+data[i].Grade);
                }
                PrintGraphsSubmissions(submissions);
            },
            error: function (xHttpReq, error, msg) {

            }
        });
        if (!ignoreRoles) {
            $.ajax({
                url: baseAveragesUrl,
                method: "GET",
                success: function (data) {
                    for (let i = 0; i < data.length; i++) {
                        averages.AverageGrade.push(data[i].AverageGrade);
                        averages.YearDue.push(data[i].YearDue);
                    }
                    PrintGraphsAverages(averages);
                },
                error: function (xHttpReq, error, msg) {

                }
            });
            $.ajax({
                url: baseMedianUrl,
                method: "GET",
                success: function (data) {
                    for (let i = 0; i < data.length; i++) {
                        medians.MedianGrade.push(data[i].MedianGrade);
                        medians.YearDue.push(data[i].YearDue);
                    }
                    PrintGraphsMedians(medians);
                },
                error: function (xHttpReq, error, msg) {

                }
            });
        }
        else {
            $.ajax({
                url: baseAveragesAcrossAllRolesUrl,
                method: "GET",
                success: function (data) {
                    for (let i = 0; i < data.length; i++) {
                        averages.AverageGrade.push(data[i].AverageGrade);
                        averages.YearDue.push(data[i].YearDue);
                    }
                    PrintGraphsAverages(averages);
                },
                error: function (xHttpReq, error, msg) {

                }
            });
            $.ajax({
                url: baseMedianAcrossAllRolesUrl,
                method: "GET",
                success: function (data) {
                    for (let i = 0; i < data.length; i++) {
                        medians.MedianGrade.push(data[i].MedianGrade);
                        medians.YearDue.push(data[i].YearDue);
                    }
                    PrintGraphsMedians(medians);
                },
                error: function (xHttpReq, error, msg) {

                }
            });
        }


    }
    function handleDownload(downloadUrl) {
        var a = document.createElement("a");
        a.href = downloadUrl;
        a.setAttribute('target', '_blank');
        document.body.appendChild(a);
        a.click();
        // cleanup
        document.body.remove(a); 
        document.location.href = '@Url.Content("~/Administration/ViewGraphsAndReports")';
    }

    $(document).ready(function () {

        $('#subjectId').change(function () {
            CallCharting();
        });
        $('#select').click(function () {
                CallCharting();
        });

        $('#generateReport').click(function(){

            var reportType = $('#Reports').val();

            baseSubmissionsUrl = "@Url.Content("~/AdhocPatchAndReporting/ReportGroupByNumberOfStudentsReceivedGradesInSubjectAndyearBtwn?")";
            baseAveragesUrl = "@Url.Content("~/AdhocPatchAndReporting/ReportsAverageGradeBySubjectRoleAndYearForParticualarSubjectBtwnYears?")";
            baseMedianUrl = "@Url.Content("~/AdhocPatchAndReporting/ReportMedianGradeAttainedGradeBySubjectRoleAndYearForParticualarSubjectBtwnYears?")";
            studentGradesUrl = "@Url.Content("~/AdhocPatchAndReporting/ReportNumberOfStudentsGradedInSubjectAndyearBtwnYears?")";
            baseAveragesAcrossAllRolesUrl = "@Url.Content("~/AdhocPatchAndReporting/ReportAverageAttainedGradesGroupedByGradeAndSubjectAcrossAllRolesAndyearBtwnYears?")";
            baseMedianAcrossAllRolesUrl =  "@Url.Content("~/ReportMedianGradeAttainedGradeBySubjectAcrossAllRolesAndYearForParticualarSubjectBtwnYears?")";
            averageAndMedianUrl =  "@Url.Content("~/AdhocPatchAndReporting/AverageAndMedianGradeAttainedBySubjectAcrossAllRolesAndyearBtwnYears?")";

            ComputeUrlPortions();

            switch(parseInt(reportType)) {
                case 1:
                    handleDownload(baseSubmissionsUrl);
                break;
                case 2:
                    handleDownload(baseMedianUrl);
                break;
                case 3:
                    handleDownload(baseSubmissionsUrl);
                break;
                case 4:
                    handleDownload(studentGradesUrl);
                    break;
                case 5:
                    handleDownload(baseAveragesAcrossAllRolesUrl);
                    break;
                case 6:
                    handleDownload(baseMedianAcrossAllRolesUrl);
                    break;
                case 7:
                    handleDownload(averageAndMedianUrl);
                    break;
                default:
                    handleDownload(baseSubmissionsUrl);
            }
        });
    });
</script>
