
@{
    ViewBag.Title = "Reporting And Performance";
    Layout = "~/Views/Shared/_NewAdminLayout.cshtml";
}

<h2>Reporting And Performance</h2>


<div class="form-horizontal">
    <h4>Student Reporting And Performance</h4>
    <div class="form-group">
        @Html.Label("Subject", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SubjectId", ViewBag.SubjectList as List<SelectListItem>, new { htmlAttributes = new { @class = "form-control", @id = "SubjectId" } })
        </div>
    </div>                
    <div class="form-group">
        @Html.Label("StudentRole", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("StudentRole", ViewBag.RoleList as List<SelectListItem>, new { htmlAttributes = new { @class = "form-control", @id="StudentRole" } })
            @Html.ValidationMessage("StudentRole", "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Year Start", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBox("YearStart", "", new { htmlAttributes = new { @class = "form-control", @id = "YearStart", @type = "number" } })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Year End", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBox("YearEnd", "", new { htmlAttributes = new { @class = "form-control", @id = "YearEnd", @type = "number" } })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="select" value="Select" class="btn btn-default" />
        </div>
    </div>
    <div class="container-fluid">
        <canvas id="studentGrades"></canvas>
        <canvas id="submissions"></canvas>
        <canvas id="averages"></canvas>
        <canvas id="medians"></canvas>
    </div>
</div>

<script type="text/javascript">
    var submissions = { YearDue: [], NumberOfStudents: []};
    var medians = { YearDue: [], MedianGrade: [] };
    var averages = { YearDue: [], AverageGrade: [] };
    var studentGrades = { YearDue: [], NumberOfStudents: [] };

    function PrintGraphStudentGrades(studentGrades) {
        if (studentGrades.NumberOfStudents.length > 0) {
            //print submissions
            var percentilesBarChart = new Chart(document.getElementById("studentGrades"), {
                type: 'pie',
                data: {
                    labels: studentGrades.YearDue,
                    datasets: [
                        {
                            label: "Year Of Assignments",
                            backgroundColor: ["#3e95cd", "#8e5ea2", "#3cba9f", "#e8c3b9", "#c45850"],
                            data: studentGrades.NumberOfStudents
                        }
                    ]
                },
                options: {
                    legend: { display: false },
                    title: {
                        display: true,
                        text: 'Number Of Students Achieving Grades, Across all Roles Over The years'
                    }
                }
            });
        }
    }
    function PrintGraphsSubmissions(submissions) {
        if (submissions.NumberOfStudents.length > 0) {
            //print submissions
            var submissionsBarChart = new Chart(document.getElementById("submissions"), {
                type: 'bar',
                data: {
                    labels: submissions.YearDue,
                    datasets: [
                        {
                            label: "Year Of Assignments",
                            backgroundColor: ["#3e95cd", "#8e5ea2", "#3cba9f", "#e8c3b9", "#c45850"],
                            data: submissions.NumberOfStudents
                        }
                    ]
                },
                options: {
                    legend: { display: false },
                    title: {
                        display: true,
                        text: 'Grades Achieved by Student Number, Over The years'
                    }
                }
            });
        }
    }
    function PrintGraphsAverages(averages) {
        if (averages.AverageGrade.length > 0) {
            //print averages
            var averageGradeBarChart = new Chart(document.getElementById("averages"), {
                type: 'bar',
                data: {
                    labels: averages.YearDue,
                    datasets: [
                        {
                            label: "Year Of Assignments",
                            backgroundColor: ["#3e95cd", "#8e5ea2", "#3cba9f", "#e8c3b9", "#c45850"],
                            data: averages.AverageGrade
                        }
                    ]
                },
                options: {
                    legend: { display: false },
                    title: {
                        display: true,
                        text: 'Average Grades Over The years'
                    }
                }
            });
        }
    }
    function PrintGraphsMedians(medians) {
        if (medians.MedianGrade.length > 0) {
            //print medians            
            var medianGradeBarChart = new Chart(document.getElementById("medians"), {
            type: 'bar',
                data: {
                    labels: medians.YearDue,
                    datasets: [
                        {
                            label: "Year Of Assignments",
                            backgroundColor: ["#3e95cd", "#8e5ea2", "#3cba9f", "#e8c3b9", "#c45850"],
                            data: medians.MedianGrade
                        }
                    ]
            },
            options: {
                legend: { display: false },
                title: {
                    display: true,
                        text: 'Median Grades Over The years'
                }
            }
        });
        }
    }
    function CallCharting() {
        submissions = { YearDue: [], NumberOfStudents: [] };
        medians = { YearDue: [], MedianGrade: [] };
        averages = { YearDue: [], AverageGrade: [] };
        studentGrades = { YearDue: [], NumberOfStudents: [] };
        var baseSubmissionsUrl = "@Url.Content("~/AdhocPatchAndReporting/GroupByNumberOfStudentsReceivedGradesInSubjectAndyearBtwn?")";
        var baseAveragesUrl = "@Url.Content("~/AdhocPatchAndReporting/AverageGradeBySubjectRoleAndYearForParticualarSubjectBtwnYears?")";
        var baseMedianUrl = "@Url.Content("~/AdhocPatchAndReporting/MedianGradeAttainedGradeBySubjectRoleAndYearForParticualarSubjectBtwnYears?")";
        var studentGradesUrl =  "@Url.Content("~/AdhocPatchAndReporting/NumberOfStudentsGradedInSubjectAndyearBtwnYears?")";
        var subject = $('#SubjectId').val();
        var yearStart = $('#YearStart').val();
        var yearEnd = $('#YearEnd').val();
        var studentRole = $('#StudentRole').val();

        if (subject > 0) {
            baseSubmissionsUrl += "subjectId=" + subject;
            baseAveragesUrl += "subjectId=" + subject;
            baseMedianUrl += "subjectId=" + subject;
            studentGradesUrl += "subjectId=" + subject;

            baseSubmissionsUrl += "&studentRole=" + studentRole;
            baseAveragesUrl += "&studentRole=" + studentRole;
            baseMedianUrl += "&studentRole=" + studentRole;

            if (yearStart != "") {

                baseSubmissionsUrl += "&yearStart=" + yearStart;
                baseAveragesUrl += "&yearStart=" + yearStart;
                baseMedianUrl += "&yearStart=" + yearStart;
                studentGradesUrl += "&yearStart=" + yearStart;
                if (yearEnd != "") {

                    baseSubmissionsUrl += "&yearEnd=" + yearEnd;
                    baseAveragesUrl += "&yearEnd=" + yearEnd;
                    baseMedianUrl += "&yearEnd=" + yearEnd;
                    studentGradesUrl += "&yearEnd=" + yearEnd;
                }
                else {

                    baseSubmissionsUrl += "&yearEnd=" + yearStart;
                    baseAveragesUrl += "&yearEnd=" + yearStart;
                    baseMedianUrl += "&yearEnd=" + yearStart;
                    studentGradesUrl += "&yearEnd=" + yearStart;
                }
            }
            else {
               
                baseSubmissionsUrl += "subjectId=" + subject;
                baseAveragesUrl += "subjectId=" + subject;
                baseMedianUrl += "subjectId=" + subject;
                studentGradesUrl += "subjectId=" + subject;

                var yearStart = '@DateTime.Now.Year';
                var yearEnd = '@DateTime.Now.Year';
                baseSubmissionsUrl += "&yearStart=" + yearStart;
                baseAveragesUrl += "&yearStart=" + yearStart;
                baseMedianUrl += "&yearStart=" + yearStart;
                studentGradesUrl += "&yearStart=" + yearStart;

                baseSubmissionsUrl += "&yearEnd=" + yearEnd;
                baseAveragesUrl += "&yearEnd=" + yearEnd;
                baseMedianUrl += "&yearEnd=" + yearEnd;
                studentGradesUrl += "&yearEnd=" + yearEnd;
            }
        }
        else {
            baseSubmissionsUrl = "@Url.Content("~/AdhocPatchAndReporting/ReportingGroupSubmission")";
            baseAveragesUrl = "@Url.Content("~/AdhocPatchAndReporting/AverageGradeBySubjectRoleAndYearForParticualarSubjectBtwnYears")";
            baseMedianUrl = "@Url.Content("~/AdhocPatchAndReporting/MedianGradeAttainedGradeBySubjectRoleAndYearForParticualarSubjectBtwnYears")";
            studentGradesUrl =  "@Url.Content("~/AdhocPatchAndReporting/NumberOfStudentsGradedInSubjectAndyearBtwnYears")";
        }
        $.ajax({
            url: studentGradesUrl,
            method: "GET",
            success: function (data) {
                for (let i = 0; i < data.length; i++) {
                    studentGrades.NumberOfStudents.push(data[i].NumberOfStudents);
                    studentGrades.YearDue.push(data[i].YearDue + ", " + data[i].Grade);
                }

                PrintGraphStudentGrades(studentGrades);
            },
            error: function (xHttpReq, error, msg) {

            }
        });
        $.ajax({
            url: baseSubmissionsUrl,
            method: "GET",
            success: function (data) {
                for (let i = 0; i < data.length; i++) {
                    submissions.NumberOfStudents.push(data[i].NumberOfStudents);
                    submissions.YearDue.push(data[i].YearDue +", "+data[i].Grade);
                }
                PrintGraphsSubmissions(submissions);
            },
            error: function (xHttpReq, error, msg) {

            }
        });
        $.ajax({
            url: baseAveragesUrl,
            method: "GET",
            success: function (data) {
                for (let i = 0; i < data.length; i++) {
                    averages.AverageGrade.push(data[i].AverageGrade);
                    averages.YearDue.push(data[i].YearDue);
                }
                PrintGraphsAverages(averages);
            },
            error: function (xHttpReq, error, msg) {

            }
        });
        $.ajax({
            url: baseMedianUrl,
            method: "GET",
            success: function (data) {
                for (let i = 0; i < data.length; i++) {
                    medians.MedianGrade.push(data[i].MedianGrade);
                    medians.YearDue.push(data[i].YearDue);
                }
                PrintGraphsMedians(medians);
            },
            error: function (xHttpReq, error,msg) {

            }
        });

    }
    $(document).ready(function () {

        $('#subjectId').change(function () {
            CallCharting();
        });        
        $('#select').click(function () {
                CallCharting();
        });
    });
</script>
