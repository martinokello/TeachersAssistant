@model TeacherAssistant.Models.IClassroomViewModel

@{
    ViewBag.Title = "Manage ClassRoom";
    Layout = "~/Views/Shared/_NewAdminLayout.cshtml";
}

<h2>Manage ClassRoom</h2>

<form method="post" id="ManageClassroomForm" action="">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Classroom</h4>

        <div style="background-color: #DADADA;">
            <div style="padding:5px;">
                <hr />
                @Html.ValidationSummary("", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.ClassroomId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ClassroomId", ViewBag.ClassroomList as List<SelectListItem>, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ClassroomId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CalendarBookingId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CalendarBookingId", ViewBag.CalendarBookingList as List<SelectListItem>, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.TeacherId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TeacherId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TeacherId", ViewBag.TeacherList as List<SelectListItem>, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TeacherId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SubjectId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SubjectId", ViewBag.SubjectList as List<SelectListItem>, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.StudentType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("StudentType", (ViewBag.RoleList as List<SelectListItem>).Where(p => p.Value.ToLower() != "administrator"), new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("StudentType", "*", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" name="Select" value="Select" class="btn btn-default" />
                        <input type="submit" name="Create" value="Create" class="btn btn-default" />
                        <input type="submit" name="Update" value="Update" class="btn btn-default" />
                        <input type="submit" name="Delete" value="Delete" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    </form>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    <script type="text/javascript">
    $(document).ready(function () {
        var $form = $('form#ManageClassroomForm');
        $('input[type="submit"]').click(function (e) {
            switch ($(this).attr('name')) {
                case 'Select':
                    $form.attr('action', '@Url.Action("AddGradesToSubmissionsSelectOrDelete", "Administration")');
                    break;
                case 'Update':
                    $form.attr('action', '@Url.Action("AddGradesToSubmissionsUpdate", "Administration")');
                    break;
                case 'Create':
                    $form.attr('action', '@Url.Action("AddGradesToSubmissionsCreate", "Administration")');
                    break;
                case 'Delete':
                    $form.attr('action', '@Url.Action("AddGradesToSubmissionsSelectOrDelete", "Administration")');
                    break;
            }
            return;
        });
        jQuery('#dateDue').datetimepicker({ format: 'YYYY-MM-DD HH:mm' });
        jQuery('#dateDue').datetimepicker({ format: 'YYYY-MM-DD HH:mm' });
        $('#dateSubmitted').val('@ViewBag.DateSubmittedString.ToString("yyyy-MM-dd HH:mm")');
        $('#dateDue').val('@ViewBag.DateDueString.ToString("yyyy-MM-dd HH:mm")');
    });
    </script>
